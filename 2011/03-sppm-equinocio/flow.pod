=encoding utf8

=head1 OpenData::Flow - um framework para fluxo de dados

=head2 OpenData

Tudo começou com um e-mail na L<lista da SP-PM|http://sao-paulo.pm.org/lista>,
no qual se falou de "hackear" dados públicos. 
Isso virou uma idéia de produzir um framework para buscar e 
analisar dados públicos. 
Logo, o L<Thiago Rondon|http://www.maluco.com.br/blog/> montou um 
L<repositório no GitHub|https://github.com/maluco/OpenData-BR> e começou a 
rabiscar umas idéias de código.

O L<OpenData-BR|http://www.opendatabr.org/> ainda tem um status de 
I<work in progress>, mas as expectativas e as perspectivas são muito 
animadoras.
 
=head2 Primeiras Idéias

=head3 Buscar dados na web (scrape)

A primeira idéia a ser implementada foi a lógica de buscar dados na web. Na
lista, ou no canal #saopaulo.pm no irc.perl.org, surgiram as primeiras
indicações de sites onde a informação estava disponibilizada. Um dos sites
primariamente visados foi o
L<PortalTransparencia|http://www.portaltransparencia.gov.br/>, o site do
governo federal para promover a transparência nos dados do governo.

Seguindo a metodologia opensource I<"release early, release often">, o
projeto começou a disponibilizar código que - efetivamente - conseguia buscar
dados. No entanto, esse código inicialmente não fazia muitas provisões
para manutenção e extensão no futuro.

=head3 ETL - extract transform load

Surgiu então uma tentativa de modularizar melhor o B<OpenData-BR>, dividindo-o
em 3 tipos de componentes:

=over

=item * Extractors

Extratores de dados. Basicamente a idéia seria que todos os scrapers, sejam
web ou não, na forma que forem, seriam um tipo de Extractor.

=item * Transformers

Robôs assassinos que se transformam em carros ou outras máquinas fantásticas.
OK, não precisavam rir mesmo. Componentes que iriam conter toda a lógica de
B<transformação> dos dados, dos documentos originais para os dados buscados.

=item * Loaders

Seriam os I<end-points> do processo de extração dos dados, e a principal
tarefa de um I<Loader> seria gravar os dados em algum lugar. Os primeiros
testes gravavam esses daods em um banco de dados MongoDB, ou imprimiam os
dados obtidos usando o L<Data::Dumper> (para debug).

=back

=head2 Flow, Baby, Flow

Quanto mais pensávamos no framework, mais ele se parecia com um fluxo de dados,
do começo (extractors) ao meio (transformers), ao fim (loaders). Assim surgiu a
idéia de fazer um sub-projeto de fluxo de dados.

Em meados de Dezembor de 2010, a primeira idéia foi codificada em termos de
"caixas", que teriam um entrada e uma saída - de uma forma bem gnérica: 
"entra porquinho, sai salsicha".

=head2 Referências

=over 4

=item * Portal Transparência (L<http://www.portaltransparencia.gov.br/>)

=back

=head2 Agradecimentos

=head2 Autor

Alexei "Russo" Znamensky E<lt> russoz no cpan org E<gt>

Blog: L<http://russoz.wordpress.com/>

LinkedIn:
L<http://www.linkedin.com/profile?viewProfile=&key=754668&trk=tab_pro>

=head2 Licença

Este texto está licenciado sob os termos da Creative Commons by-sa,
L<http://creativecommons.org/licenses/by-sa/3.0/br/>

=begin pod:xhtml

<center>
<a rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/br/"><img alt="Licença Creative Commons" style="border-width:0" src="http://i.creativecommons.org/l/by-sa/3.0/88x31.png" /></a><br />This work is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/br/">Creative Commons Attribution-ShareAlike License</a>.
</center>

=end pod:xhtml

=cut

